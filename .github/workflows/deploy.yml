name: CI / Build & Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Lint → Build → Deploy to Droplet
    runs-on: ubuntu-latest
    env:
      DEPLOY_PATH: ${{ secrets.DO_DEPLOY_PATH }}
      SERVER_USER: ${{ secrets.DO_SERVER_USER }}
      SERVER_HOST: ${{ secrets.DO_SERVER_HOST }}
      SERVER_PORT: ${{ secrets.DO_SERVER_PORT || '22' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies (for CI build)
        run: npm ci --legacy-peer-deps

      - name: Run linter
        run: npm run lint

      - name: Build (run in CI only)
        run: npm run build

      - name: Prepare SSH
        env:
          SSH_KEY: ${{ secrets.DO_SSH_PRIVATE_KEY }}
        run: |
          if [ -z "$SSH_KEY" ]; then
            echo "DO_SSH_PRIVATE_KEY not set; skipping SSH key setup"
            exit 0
          fi
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p $SERVER_PORT -H $SERVER_HOST >> ~/.ssh/known_hosts
        shell: bash

      - name: Rsync files to Droplet (exclude node_modules, .next, .env)
        run: |
          if [ -z "$DEPLOY_PATH" ]; then echo "ERROR: DEPLOY_PATH is empty"; exit 1; fi
          if [ -z "$SERVER_USER" ]; then echo "ERROR: SERVER_USER is empty"; exit 1; fi
          if [ -z "$SERVER_HOST" ]; then echo "ERROR: SERVER_HOST is empty"; exit 1; fi

          REMOTE="$SERVER_USER@$SERVER_HOST:$DEPLOY_PATH"
          echo "Ensuring remote path exists and syncing to $REMOTE"

          ssh -i ~/.ssh/id_rsa -p "$SERVER_PORT" -o StrictHostKeyChecking=yes "$SERVER_USER@$SERVER_HOST" "mkdir -p '$DEPLOY_PATH'"

          # Exclude node_modules, .next build output and .env to preserve server environment
          rsync -avz --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.next' \
            --exclude='.github' \
            --exclude='*.log' \
            --exclude='.env' \
            -e "ssh -i ~/.ssh/id_rsa -p $SERVER_PORT -o StrictHostKeyChecking=yes" \
            ./ "$REMOTE"
        shell: bash

      - name: Remote install, build and restart (legacy peer deps + build + pm2)
        run: |
          ssh -i ~/.ssh/id_rsa -p $SERVER_PORT -o StrictHostKeyChecking=yes $SERVER_USER@$SERVER_HOST "set -e; cd '$DEPLOY_PATH'; npm i --legacy-peer-deps; npm run build; pm2 restart 1"
        shell: bash