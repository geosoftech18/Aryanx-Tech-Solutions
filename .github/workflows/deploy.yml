name: CI / Build & Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Lint → Build → Deploy to Droplet
    runs-on: ubuntu-latest
    env:
      DEPLOY_PATH: ${{ secrets.DO_DEPLOY_PATH }}
      SERVER_USER: ${{ secrets.DO_SERVER_USER }}
      SERVER_HOST: ${{ secrets.DO_SERVER_HOST }}
      SERVER_PORT: ${{ secrets.DO_SERVER_PORT || '22' }}
      RESTART_COMMAND: ${{ secrets.DO_RESTART_COMMAND || 'pm2 restart all' }}
      DO_SSH_PRIVATE_KEY: ${{ secrets.DO_SSH_PRIVATE_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Build
        run: npm run build
      - name: Prepare SSH
        if: ${{ env.DO_SSH_PRIVATE_KEY != '' }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ env.DO_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # add host to known_hosts to avoid prompt
          ssh-keyscan -p $SERVER_PORT -H $SERVER_HOST >> ~/.ssh/known_hosts
        shell: bash

      - name: Rsync files to Droplet
        run: |
          rsync -avz --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.github' \
            --exclude='*.log' \
            -e "ssh -i ~/.ssh/id_rsa -p $SERVER_PORT -o StrictHostKeyChecking=yes" \
            ./ $SERVER_USER@$SERVER_HOST:$DEPLOY_PATH
        shell: bash

      - name: Run remote deploy commands
        env:
          RESTART_COMMAND: ${{ env.RESTART_COMMAND }}
        run: |
          ssh -i ~/.ssh/id_rsa -p $SERVER_PORT -o StrictHostKeyChecking=yes $SERVER_USER@$SERVER_HOST "set -e; cd '$DEPLOY_PATH'; if [ -f package-lock.json ] || [ -f pnpm-lock.yaml ] || [ -f yarn.lock ]; then npm ci --production || true; fi; $RESTART_COMMAND"
        shell: bash
